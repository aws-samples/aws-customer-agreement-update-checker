AWSTemplateFormatVersion: '2010-09-09'
Description: Customer Agreement update checker

Resources:
  UpdateNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: update-notification
  
  EmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: !Ref NotificationEmailAddress
      TopicArn: !Ref UpdateNotificationTopic

  CAUpdateLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:  
      LogGroupClass: INFREQUENT_ACCESS
      LogGroupName: CAUpdateLambdaLogGroup
      RetentionInDays: 7

  CAUpdateLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoDBAndSNSAccessAndCloudWatch
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                  - "ssm:GetParameter"
                  - "ssm:PutParameter"
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/customer_agreement_last_updated_date"
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref UpdateNotificationTopic
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt CAUpdateLambdaLogGroup.Arn


  CAUpdateFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ca-update-check
      Handler: ca_update_check.lambda_handler
      Role: !GetAtt CAUpdateLambdaExecutionRole.Arn
      Code: ca_update_check
      Runtime: python3.12
      Timeout: 30
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref UpdateNotificationTopic

  DailyTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      Name: DailyLambdaTrigger
      ScheduleExpression: cron(0 12 * * ? *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt CAUpdateFunction.Arn
          Id: TargetFunction
  
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CAUpdateFunction.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DailyTriggerRule.Arn

  LastUpdatedDateParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: customer_agreement_last_updated_date
      Type: String
      Value: "2024-01-01"
      Description: "The last date the agreement was updated."

Parameters:
  NotificationEmailAddress:
    Description: Email address to receive notifications
    Type: String

Outputs:
  SNSTopicARN:
    Description: "SNS Topic ARN"
    Value: !Ref UpdateNotificationTopic

  LambdaFunctionARN:
    Description: "Lambda Function ARN"
    Value: !GetAtt CAUpdateFunction.Arn
